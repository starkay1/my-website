name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (so your project can be deployed to GitHub Pages).
          static_site_generator: next

      - name: Install dependencies
        run: npm ci

      - name: Generate Prisma client
        run: npx prisma generate

      - name: Build with Next.js (Static)
        run: npm run build:static
        env:
          NODE_ENV: production
          NEXTAUTH_URL: https://spaceplusworldwide.club
          NEXT_PUBLIC_APP_URL: https://spaceplusworldwide.club
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          
          # Google Analytics和监控
          NEXT_PUBLIC_GA_ID: ${{ secrets.NEXT_PUBLIC_GA_ID }}
          NEXT_PUBLIC_GOOGLE_SITE_VERIFICATION: ${{ secrets.NEXT_PUBLIC_GOOGLE_SITE_VERIFICATION }}
          NEXT_PUBLIC_OPTIMIZE_ID: ${{ secrets.NEXT_PUBLIC_OPTIMIZE_ID }}
          NEXT_PUBLIC_ENABLE_ANALYTICS: "true"
          NEXT_PUBLIC_ENABLE_PERFORMANCE_MONITORING: "true"
          NEXT_PUBLIC_PERFORMANCE_SAMPLE_RATE: "0.1"
          
          # Sentry错误监控
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
          
          # Google OAuth
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          
          # 邮件配置
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          SMTP_FROM: ${{ secrets.SMTP_FROM }}
          NOTIFICATION_EMAIL: ${{ secrets.NOTIFICATION_EMAIL }}
          HR_EMAIL: ${{ secrets.HR_EMAIL }}
          SUPPORT_EMAIL: ${{ secrets.SUPPORT_EMAIL }}
          
          # 联系表单Webhook
          CONTACT_WEBHOOK_URL: ${{ secrets.CONTACT_WEBHOOK_URL }}
          
          # Vercel Analytics
          VERCEL_ANALYTICS_ID: ${{ secrets.VERCEL_ANALYTICS_ID }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Wait for deployment
        run: sleep 30
        
      - name: Verify deployment
        run: |
          echo "🚀 Deployment successful!"
          echo "Site URL: ${{ steps.deployment.outputs.page_url }}"
          echo "Custom Domain: https://spaceplusworldwide.club"
          
          # 基本健康检查
          echo "Performing basic health checks..."
          
          # 检查GitHub Pages URL
          if curl -f "${{ steps.deployment.outputs.page_url }}" >/dev/null 2>&1; then
            echo "✓ GitHub Pages URL is accessible"
          else
            echo "⚠ GitHub Pages URL not yet accessible"
          fi
          
          # 检查自定义域名（可能需要DNS传播时间）
          if curl -f "https://spaceplusworldwide.club" >/dev/null 2>&1; then
            echo "✓ Custom domain is working"
          else
            echo "⚠ Custom domain not yet available (DNS propagation may be in progress)"
          fi

  # 部署后验证
  post-deploy-verification:
    runs-on: ubuntu-latest
    needs: deploy
    if: success()
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Run domain verification
        run: |
          # 等待DNS传播
          echo "Waiting for DNS propagation..."
          sleep 120
          
          # 运行域名验证脚本
          chmod +x ./scripts/verify-domain.sh
          ./scripts/verify-domain.sh || echo "Domain verification completed with warnings"
          
      - name: Test key pages
        run: |
          echo "Testing key pages accessibility..."
          
          PAGES=(
            "https://spaceplusworldwide.club"
            "https://spaceplusworldwide.club/about"
            "https://spaceplusworldwide.club/services"
            "https://spaceplusworldwide.club/contact"
            "https://spaceplusworldwide.club/jobs"
          )
          
          for page in "${PAGES[@]}"; do
            echo "Testing: $page"
            if curl -f "$page" >/dev/null 2>&1; then
              echo "✓ $page is accessible"
            else
              echo "⚠ $page may not be fully available yet"
            fi
          done
          
      - name: Performance check
        run: |
          echo "Running basic performance check..."
          
          LOAD_TIME=$(curl -o /dev/null -s -w '%{time_total}' "https://spaceplusworldwide.club" 2>/dev/null || echo "0")
          echo "Page load time: ${LOAD_TIME}s"
          
          if [ "$LOAD_TIME" != "0" ]; then
            echo "✓ Performance check completed"
          else
            echo "⚠ Performance check skipped (site may not be fully available)"
          fi