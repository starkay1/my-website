// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model AdminUser {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Contact {
  id             String   @id @default(cuid())
  name           String
  phone          String?
  email          String?
  message        String
  privacyConsent Boolean  @default(false)
  status         String   @default("new")
  source         String   @default("website")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model News {
  id          String   @id @default(cuid())
  slug        String   @unique
  title       String
  excerpt     String
  content     String
  category    String
  authorName  String
  authorTitle String?
  authorAvatar String?
  publishedAt DateTime @default(now())
  readTime    Int      @default(5)
  image       String?
  tags        Json     // store string[] as JSON
  featured    Boolean  @default(false)
  views       Int      @default(0)
  likes       Int      @default(0)
  source      String   @default("manual") // manual, instagram, wechat, auto
  sourceUrl   String?  // 原始链接
  sourceId    String?  // 原始平台ID
  autoGenerated Boolean @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SocialSource {
  id          String   @id @default(cuid())
  name        String   // 源名称，如"公司Instagram"
  platform    String   // instagram, wechat, weibo, etc.
  username    String?  // 用户名或账号
  accessToken String?  // API访问令牌
  webhookUrl  String?  // Webhook URL
  isActive    Boolean  @default(true)
  lastSync    DateTime?
  syncInterval Int     @default(3600) // 同步间隔（秒）
  config      Json?    // 平台特定配置
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  posts       SocialPost[]
}

model SocialPost {
  id          String   @id @default(cuid())
  sourceId    String
  platform    String   // instagram, wechat, etc.
  platformId  String   // 平台原始ID
  title       String?
  content     String
  mediaUrls   Json     // 媒体文件URLs数组
  authorName  String?
  authorAvatar String?
  publishedAt DateTime
  likes       Int      @default(0)
  comments    Int      @default(0)
  shares      Int      @default(0)
  hashtags    Json?    // 标签数组
  location    String?
  isProcessed Boolean  @default(false) // 是否已处理为News
  newsId      String?  // 关联的News ID
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  source      SocialSource @relation(fields: [sourceId], references: [id], onDelete: Cascade)
  
  @@unique([platform, platformId])
}

model Case {
  id          String   @id @default(cuid())
  slug        String   @unique
  title       String
  subtitle    String
  excerpt     String
  client      String
  industry    String
  location    String
  duration    String
  teamSize    String
  budget      String
  status      String
  featured    Boolean  @default(false)
  publishedAt DateTime @default(now())
  coverImage  String
  gallery     Json     // store string[] as JSON
  tags        Json     // store string[] as JSON
  category    String
  overviewChallenge String
  overviewSolution  String
  overviewResults   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  password    String
  name        String
  role        String   @default("user") // user, hr, admin, editor
  avatar      String?
  phone       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  applications JobApplication[]
  createdJobs  Job[] @relation("JobCreator")
  contents     Content[] @relation("ContentAuthor")
  uploadedMedia Media[] @relation("MediaUploader")
}

model Job {
  id              String   @id @default(cuid())
  title           String
  department      String
  location        String
  type            String   // full-time, part-time, contract, internship
  description     String
  requirements    Json     // store string[] as JSON
  responsibilities Json?   // store string[] as JSON
  benefits        Json?    // store string[] as JSON
  salary          String?
  experience      String?
  deadline        String?
  isUrgent        Boolean  @default(false)
  isRemote        Boolean  @default(false)
  status          String   @default("published") // draft, published, closed
  postedAt        String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  createdById     String?
  
  // Relations
  createdBy       User? @relation("JobCreator", fields: [createdById], references: [id])
  applications    JobApplication[]
}

model JobApplication {
  id          String   @id @default(cuid())
  jobId       String
  userId      String?
  name        String
  email       String
  phone       String
  coverLetter String?
  resumeUrl   String?
  status      String   @default("pending") // pending, reviewing, interview, rejected, accepted
  notes       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  job         Job      @relation(fields: [jobId], references: [id], onDelete: Cascade)
  user        User?    @relation(fields: [userId], references: [id])
}

model File {
  id          String   @id @default(cuid())
  filename    String
  originalName String
  mimeType    String
  size        Int
  path        String
  url         String
  uploadedBy  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Homepage {
  id             String   @id @default(cuid())
  heroSection    Json     // 英雄区域配置
  aboutSection   Json?    // 关于我们区域配置
  servicesSection Json?   // 服务区域配置
  casesSection   Json?    // 案例区域配置
  clientsSection Json?    // 客户区域配置
  contactSection Json?    // 联系我们区域配置
  seoSettings    Json?    // SEO设置
  isActive       Boolean  @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

// 内容管理系统模型
model Content {
  id            String   @id @default(cuid())
  title         String
  slug          String
  content       String
  excerpt       String?
  status        String   @default("draft") // draft, published, archived
  type          String   // page, post, service, case_study, news
  locale        String   @default("en") // en, zh-CN, th
  featuredImage String?
  seoTitle      String?
  seoDescription String?
  tags          Json?    // store string[] as JSON
  categories    Json?    // store string[] as JSON
  publishedAt   DateTime?
  authorId      String
  metadata      Json?    // 额外的元数据
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  
  // Relations
  author        User     @relation("ContentAuthor", fields: [authorId], references: [id])
  
  @@unique([slug, locale, type])
  @@index([status, type, locale])
  @@index([publishedAt])
}

model Media {
  id           String   @id @default(cuid())
  filename     String
  originalName String
  mimeType     String
  size         Int
  url          String
  alt          String?
  caption      String?
  uploadedBy   String
  uploadedAt   DateTime @default(now())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  // Relations
  uploader     User     @relation("MediaUploader", fields: [uploadedBy], references: [id])
  
  @@index([mimeType])
  @@index([uploadedAt])
}
